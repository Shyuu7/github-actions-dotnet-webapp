name: GitHub Actions Demo
run-name: ${{ github.actor }} está testando o GitHub Actions! 🚀

on: 
  schedule:
  - cron: '36 18 * * 3'
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🔎 O nome da sua branch é ${{ github.ref }} e o seu repositório é ${{ github.repository }}."
      - run: echo " Testando a nova funcionalidade do GitHub Workflows!"
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 O repositório ${{ github.repository }} foi clonado para o runner."
      - run: echo "🖥️ O workflow está pronto para testar o código no seu runner."
      - name: Listar arquivos do repositório
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 O status dessa action é ${{ job.status }}."
  
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '3.1.x', '6.0.x' ]

      steps:
        - uses: actions/checkout@v4
        - name: Setup dotnet
          uses: actions/setup-dotnet@v3
          with:
            dotnet-version: ${{ matrix.dotnet-version }}
        - name: Install dependencies
          run: dotnet restore
        - name: Test with dotnet
          run: dotnet test --logger trx --results-directory "TestResults-${{ matrix.dotnet-version }}"
        - name: Upload dotnet test results
          uses: actions/upload-artifact@v4
          with:
            name: dotnet-results-${{ matrix.dotnet-version }}
            path: TestResults-${{ matrix.dotnet-version }}
          # Use always() to always run this step to publish test results when there are test failures
          if: ${{ always() }}