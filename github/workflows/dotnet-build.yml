name: GitHub Actions Demo
run-name: ${{ github.actor }} est√° testando o GitHub Actions! üöÄ
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ Esse actions foi automaticamente iniciado por um evento ${{ github.event_name }}."
      - run: echo "üîé O nome da sua branch √© ${{ github.ref }} e o seu reposit√≥rio √© ${{ github.repository }}."
      - run: echo " Testando a nova funcionalidade do GitHub Workflows!"
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "üí° O reposit√≥rio ${{ github.repository }} foi clonado para o runner."
      - run: echo "üñ•Ô∏è O workflow est√° pronto para testar o c√≥digo no seu runner."
      - name: Listar arquivos do reposit√≥rio
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè O status dessa action √©: ${{ job.status }}."
      

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# A sample workflow which sets up periodic OSV-Scanner scanning for vulnerabilities,
# in addition to a PR check which fails if new vulnerabilities are introduced.
#
# For more examples and options, including how to ignore specific vulnerabilities,
# see https://google.github.io/osv-scanner/github-action/

name: OSV-Scanner

on:
  pull_request:
    branches: [ "master" ]
  merge_group:
    branches: [ "master" ]
  schedule:
    - cron: '36 18 * * 3'
  push:
    branches: [ "master" ]

permissions:
  # Require writing security events to upload SARIF file to security tab
  security-events: write
  # Read commit contents
  contents: read

jobs:
  scan-scheduled:
    if: ${{ github.event_name == 'push' || github.event_name == 'schedule' }}
    uses: "google/osv-scanner-action/.github/workflows/osv-scanner-reusable.yml@1f1242919d8a60496dd1874b24b62b2370ed4c78" # v1.7.1
    with:
      # Example of specifying custom arguments
      scan-args: |-
        -r
        --skip-git
        ./
  scan-pr:
    if: ${{ github.event_name == 'pull_request' || github.event_name == 'merge_group' }}
    uses: "google/osv-scanner-action/.github/workflows/osv-scanner-reusable-pr.yml@1f1242919d8a60496dd1874b24b62b2370ed4c78" # v1.7.1
    with:
      # Example of specifying custom arguments
      scan-args: |-
        -r
        --skip-git
        ./
 
  
  
name: dotnet package

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '3.1.x', '6.0.x' ]

      steps:
        - uses: actions/checkout@v4
        - name: Setup dotnet
          uses: actions/setup-dotnet@v3
          with:
            dotnet-version: ${{ matrix.dotnet-version }}
        - name: Install dependencies
          run: dotnet restore
        - name: Test with dotnet
          run: dotnet test --logger trx --results-directory "TestResults-${{ matrix.dotnet-version }}"
        - name: Upload dotnet test results
          uses: actions/upload-artifact@v4
          with:
            name: dotnet-results-${{ matrix.dotnet-version }}
            path: TestResults-${{ matrix.dotnet-version }}
          # Use always() to always run this step to publish test results when there are test failures
          if: ${{ always() }}
